// Generated by view binder compiler. Do not edit!
package com.example.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.android.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityResetPasswordBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final MaterialButton btnUpdatePass;

  @NonNull
  public final LinearLayout linerHeader;

  @NonNull
  public final ProgressBar loading;

  @NonNull
  public final TextInputEditText tbComfirmPassword;

  @NonNull
  public final TextInputEditText tbNewPassword;

  @NonNull
  public final TextInputEditText tbPasswordOld;

  private ActivityResetPasswordBinding(@NonNull RelativeLayout rootView, @NonNull ImageView btnBack,
      @NonNull MaterialButton btnUpdatePass, @NonNull LinearLayout linerHeader,
      @NonNull ProgressBar loading, @NonNull TextInputEditText tbComfirmPassword,
      @NonNull TextInputEditText tbNewPassword, @NonNull TextInputEditText tbPasswordOld) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnUpdatePass = btnUpdatePass;
    this.linerHeader = linerHeader;
    this.loading = loading;
    this.tbComfirmPassword = tbComfirmPassword;
    this.tbNewPassword = tbNewPassword;
    this.tbPasswordOld = tbPasswordOld;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityResetPasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityResetPasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_reset_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityResetPasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_update_pass;
      MaterialButton btnUpdatePass = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdatePass == null) {
        break missingId;
      }

      id = R.id.liner_header;
      LinearLayout linerHeader = ViewBindings.findChildViewById(rootView, id);
      if (linerHeader == null) {
        break missingId;
      }

      id = R.id.loading;
      ProgressBar loading = ViewBindings.findChildViewById(rootView, id);
      if (loading == null) {
        break missingId;
      }

      id = R.id.tb_comfirm_password;
      TextInputEditText tbComfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (tbComfirmPassword == null) {
        break missingId;
      }

      id = R.id.tb_new_Password;
      TextInputEditText tbNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (tbNewPassword == null) {
        break missingId;
      }

      id = R.id.tb_password_old;
      TextInputEditText tbPasswordOld = ViewBindings.findChildViewById(rootView, id);
      if (tbPasswordOld == null) {
        break missingId;
      }

      return new ActivityResetPasswordBinding((RelativeLayout) rootView, btnBack, btnUpdatePass,
          linerHeader, loading, tbComfirmPassword, tbNewPassword, tbPasswordOld);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
